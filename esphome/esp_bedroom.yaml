esphome:
  name: esp_bedroom
  platform: ESP8266
  board: d1_mini

  includes:
    - recuperator.h

wifi:
  ssid: "matrix_ext"
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Bedroom Fallback"
    password: !secret fallback_password

captive_portal:

# Enable logging
logger:
  level: DEBUG
  esp8266_store_log_strings_in_flash: False

# Enable Home Assistant API
api:
  password: !secret api_password

ota:
  password: !secret ota_password

sensor:
  - platform: dht
    pin: D4
    model: DHT22
    temperature:
      name: "Bedroom Temperature"
    humidity:
      name: "Bedroom Humidity"
    update_interval: 60s

remote_transmitter:
  pin: D2
  carrier_duty_percent: 50%

output:
- platform: custom
  type: float
  lambda: |-
    auto fan_output = new RecuperatorOutput();
    App.register_component(fan_output);
    return {fan_output};

  outputs:
    id: fan_output

fan:
  - platform: speed
    output: fan_output
    name: "Bedroom Speed Fan"


switch:

  - platform: template
    name: "Bedroom Fan"
    assumed_state: true
    id: bedroom_fan
    turn_on_action:
      - remote_transmitter.transmit_nec:
          address: 0x00FF
          command: 0xA25D
      - switch.template.publish:
          id: bedroom_fan
          state: ON
    turn_off_action:
      - remote_transmitter.transmit_nec:
          address: 0x00FF
          command: 0x6897
      - switch.template.publish:
          id: bedroom_fan
          state: OFF

  - platform: template
    name: "Bedroom Indicator"
    assumed_state: true
    id: bedroom_fan_led
    turn_on_action:
      - remote_transmitter.transmit_nec:
          address: 0x00FF
          command: 0x5AA5
      - switch.template.publish:
          id: bedroom_fan_led
          state: ON
    turn_off_action:
      - remote_transmitter.transmit_nec:
          address: 0x00FF
          command: 0x10EF
      - switch.template.publish:
          id: bedroom_fan_led
          state: OFF

# Fan output
# output:
#   - platform: custom
#     type: float
#     id: fan_output
#     turn_on_action:
#       - remote_transmitter.transmit_nec:
#         address: 0x00FF
#         command: 0x5AA5
#     turn_off_action:
#       - remote_transmitter.transmit_nec:
#         address: 0x00FF
#         command: 0x5AA5
#     set_level_action:
#       - lambda: "ESP_LOGD(TAG, 'Level is: %f', state);"

# fan:
#   - platform: speed
#     output: fan_output
#     name: "Bedroom Speed Fan"
