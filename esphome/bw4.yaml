# Variables
substitutions:
  plug_name: bw4
  current_res: "0.00222"
  voltage_div: "965"

esphome:
  name: ${plug_name}
  platform: ESP8266
  board: esp8285
  esp8266_restore_from_flash: true

wifi:
  ssid: "matrix"
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${plug_name} Fallback"
    password: !secret fallback_password

captive_portal:

# Enable logging
logger:

# Enable Home Assistant API
api:
  password: !secret api_password

ota:
  password: !secret ota_password

binary_sensor:
  - platform: gpio
    id: button
    pin:
      number: GPIO3
      mode: INPUT_PULLUP
      inverted: True
    on_click:
      - switch.toggle: relay

# Relay switch
switch:
  - platform: gpio
    name: ${plug_name}_switch
    pin: GPIO14
    id: relay
    restore_mode: RESTORE_DEFAULT_ON
    on_turn_on:
      - switch.turn_on: blue_led
      - switch.turn_off: red_led
    on_turn_off:
      - switch.turn_off: blue_led
      - switch.turn_off: red_led

# Blue led
  - platform: gpio
    id: blue_led
    internal: true
    restore_mode: ALWAYS_OFF
    pin: 
      number: GPIO1
      inverted: True

# Red led
  - platform: gpio
    id: red_led
    internal: true
    restore_mode: ALWAYS_OFF
    pin: 
      number: GPIO13
      inverted: True

# Power sensor
sensor:
  - platform: hlw8012
    sel_pin: 
      number: GPIO12
      inverted: True
    cf_pin: GPIO04
    cf1_pin: GPIO05
    current_resistor: ${current_res}
    voltage_divider: ${voltage_div}
    current:
      name: ${plug_name}_current
      icon: mdi:current-ac
      unit_of_measurement: A
    voltage:
      name: ${plug_name}_voltage
      icon: mdi:flash-circle
      unit_of_measurement: V
    power:
      name: ${plug_name}_power
      icon: mdi:flash-outline
      unit_of_measurement: W
      on_value:
        then:
          - lambda: |-
              if (id(relay).state) {
                // Relay is ON, check the power
                if (x > 10) {
                  if (id(blue_led).state) id(blue_led).turn_off();
                  if (!id(red_led).state) id(red_led).turn_on();
                } else {
                  if (id(red_led).state) id(red_led).turn_off();
                  if (!id(blue_led).state) id(blue_led).turn_on();
                }
              }
    initial_mode: CURRENT
    change_mode_every: 6
    update_interval: 10s

# Uptime
  - platform: uptime
    name: ${plug_name}_uptime
    update_interval: 300s

# WiFi Strength
  - platform: wifi_signal
    name: ${plug_name}_wifi_signal
    update_interval: 60s

# FW
text_sensor:
  - platform: version
    name: ${plug_name}_fw_version
